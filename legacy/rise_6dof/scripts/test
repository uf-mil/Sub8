#!/usr/bin/env python

from __future__ import division

import math

import numpy

import roslib
roslib.load_manifest("rise_6dof")
from geometry_msgs.msg import Point, Vector3, Quaternion, Pose, Twist
from tf import transformations

from sub8_msgs.msg import PoseTwist

from rise_6dof.controller import Controller

print transformations.quaternion_from_euler(math.pi/2, 0, math.pi/2)

c = Controller(dict(
    k=numpy.ones(6),
    ks=numpy.ones(6),
    alpha=numpy.ones(6),
    beta=numpy.ones(6),
    use_rise=False,
))

desired = PoseTwist(
    pose=Pose(
        position=Point(
            x=1,
            y=2,
            z=3,
        ),
        orientation=Quaternion(
            x=.5,
            y=.5,
            z=.5,
            w=.5,
        ),
    ),
    twist=Twist(
        linear=Vector3(
            x=0,
            y=0,
            z=0,
        ),
        angular=Vector3(
            x=0,
            y=0,
            z=1,
        ),
    ),
)
current = PoseTwist(
    pose=Pose(
        position=Point(
            x=1,
            y=2,
            z=3,
        ),
        orientation=Quaternion(
            x=.5,
            y=.5,
            z=.5,
            w=.5,
        ),
    ),
    twist=Twist(
        linear=Vector3(
            x=0,
            y=0,
            z=0,
        ),
        angular=Vector3(
            x=0,
            y=0,
            z=0,
        ),
    ),
)

print c.update(.01, desired, current)
