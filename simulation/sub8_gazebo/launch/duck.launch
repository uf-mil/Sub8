<launch>
  <param name="simulate" value="true" />
  <arg name="gui" default="true" />
  <arg name="cameras" default="true" />
  <arg name="turbulence" default="true" />


  <!-- start gazebo server-->
  <node name="gazebo" pkg="gazebo_ros" type="gzserver" respawn="false"
    args="$(find sub8_gazebo)/worlds/a_whole_new.world" />
  <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" if="$(arg gui)" />


  <!-- We need to spawn a torpedo that the launcher script can use to shoot -->
  <node
    name="spawn_torpedo" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/torpedo/torpedo.sdf -sdf
      -x 0 -y 0 -z 0 -model torpedo"
    output="screen" />

  <node
    name="torpedo_board" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/torpedo_board/torpedo_board.sdf -sdf
      -x 23 -y 11 -z -4.72 -Z 1.5707 -model torpedo_board"
    output="screen" />


  <!-- Start the sub model with cameras if desired -->
  <node if="$(arg cameras)"
    name="spawn_sub" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/sub8/sub8.sdf -sdf
      -x 13.0 -y 24.0 -z -1.0 -model sub8"
    output="screen" />

  <node unless="$(arg cameras)"
    name="spawn_sub" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/sub8/sub8_no_cams.sdf -sdf
      -x 13.0 -y 24.0 -z -1.0 -model sub8"
    output="screen" />


  <!-- Buoys -->
  <node
    name="spawn_buoy_red" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/buoys/red.sdf -sdf
      -x 20.1 -y 20.0 -z -1.0 -model red"
    output="screen" />

  <node
    name="spawn_buoy_green" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/buoys/green.sdf -sdf
      -x 20.0 -y 21.2 -z -1.0 -model green"
    output="screen" />

  <node
    name="spawn_buoy_yellow" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/buoys/yellow.sdf -sdf
      -x 20.03 -y 18.8 -z -1.0 -model yellow"
    output="screen" />

  <node
    name="spawn_chnl_marker_1" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/markers/channel_marker.sdf -sdf
      -x 12.0 -y 24.0 -z -4.0 -Y -0.5 -model channel_marker_1"
    output="screen" />


  <node pkg="sub8_gazebo" type="gazebo_controller.py" name="gazebo_interface" />
  <node pkg="sub8_gazebo" type="torpedo.py" name="torpedo_controller" />
  <node pkg="sub8_gazebo" type="buoys.py" name="buoy_contact_reporter" />
  <node pkg="sub8_gazebo" type="turbulator.py" name="turbulator" output="screen" if="$(arg turbulence)" />


  <include file="$(find sub8_launch)/launch/subsystems/rise.launch" />
  <include file="$(find sub8_thruster_mapper)/launch/thruster_mapper.launch" />
  <include file="$(find sub8_videoray_m5_thruster)/launch/thruster_driver.launch" />


  <node pkg="kill_handling" type="kill_master" name="kill_master"/>


  <include file="$(find sub8_launch)/launch/tf.launch" />
  <node pkg="nodelet" type="nodelet" args="standalone odometry_utils/odometry_to_tf" name="odometry_to_tf"/>
  <node pkg="nodelet" type="nodelet" name="transform_odometry" args="standalone odometry_utils/transform_odometry">
    <rosparam>
      frame_id: /map
      child_frame_id: /base_link
    </rosparam>
    <remap from="orig_odom" to="imu_odom"/>
  </node>
  <include file="$(find sub8_launch)/launch/subsystems/cameras/launch/stereo.launch" if="$(arg cameras)"/>
</launch>
