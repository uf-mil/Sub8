<launch>
  <param name="use_sim_time" value="true" />
  <param name="simulate" value="true" />
  <arg name="gui" default="true" />
  <arg name="cameras" default="true" />
  <arg name="turbulence" default="false" />
  <arg name="thrusters" default="false" />

  <!-- Load model for rviz to use -->
  <param name="robot_description" command="cat $(find sub8_missions)/tools/sub8/sub8.xml" />

  <!-- start gazebo server-->
  <node name="gazebo" pkg="gazebo_ros" type="gzserver" respawn="false"
    args="$(find sub8_gazebo)/worlds/a_whole_new.world" />
  <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" if="$(arg gui)" />


  <!-- We need to spawn a torpedo that the launcher script can use to shoot -->
  <node
    name="spawn_torpedo" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/torpedo/torpedo.sdf -sdf
      -x 0 -y 0 -z 0 -model torpedo"
    output="screen" />

  <node
    name="squilliamson" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/torpedo_board/squilliamson.sdf -sdf
      -x 24 -y 11 -z -4.72 -Z 0 -model squilliamson"
    output="screen" />

    <node
      name="tentacle" pkg="gazebo_ros" type="spawn_model"
      args="-file $(find sub8_gazebo)/models/tentacle/tentacle.sdf -sdf
        -x 24 -y 10 -z -4.4 -Z 0 -model tentacle"
      output="screen" />

  <!-- Attempting to spawn the bin and lid -->
  <node
    name ="bin_assembly" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/bin/bin_assembly.sdf -sdf
    -x -22.0 -y 14.0 -z -4.52 -Z -1.57 -model bin_assembly"
    output="screen" />

    <node
      name ="bin_assembly2" pkg="gazebo_ros" type="spawn_model"
      args="-file $(find sub8_gazebo)/models/bin/bin_assembly2.sdf -sdf
      -x -22.0 -y 15.25 -z -4.52 -Z -1.57 -model bin_assembly2"
      output="screen" />

    <node
      name ="lid" pkg="gazebo_ros" type="spawn_model"
      args="-file $(find sub8_gazebo)/models/bin/lid.sdf -sdf
      -x -22.3 -y 14.16 -z -4.47 -Z -1.57 -model lid"
      output="screen" />

  <!-- Attempting to spawn the start gate -->
  <node
      name ="start_gate" pkg="gazebo_ros" type="spawn_model"
      args="-file $(find sub8_gazebo)/models/start_gate/start_gate.sdf -sdf
      -x 15 -y 10 -z -2 -Z -1.57 -model start_gate"
      output="screen" />

    <!-- Attempting to spawn the nav gate -->
    <node
        name ="nav_gate" pkg="gazebo_ros" type="spawn_model"
        args="-file $(find sub8_gazebo)/models/nav_gate/nav_gate.sdf -sdf
        -x 25 -y -15 -z -1.5 -Z -1.57 -model nav_gate"
        output="screen" />

    <!-- Attempting to spawn the octogon -->
    <node
        name ="octagon" pkg="gazebo_ros" type="spawn_model"
        args="-file $(find sub8_gazebo)/models/octogon/octogon.sdf -sdf
        -x 20 -y -20 -z 0 -Z -1.57 -model octogon"
        output="screen" />

    <node
      name="ball1" pkg="gazebo_ros" type="spawn_model"
      args="-file $(find sub8_gazebo)/models/ball/ball1.sdf -sdf
        -x 18.8 -y -20.2 -z 0 -Z -1.57 -model ball1"
      output="screen" />
    <node
      name="ball2" pkg="gazebo_ros" type="spawn_model"
      args="-file $(find sub8_gazebo)/models/ball/ball2.sdf -sdf
        -x 20 -y -21.477 -z 0 -Z -1.57 -model ball2"
      output="screen" />

      <node
        name="ball3" pkg="gazebo_ros" type="spawn_model"
        args="-file $(find sub8_gazebo)/models/ball/ball3.sdf -sdf
          -x 21.19 -y -20.283 -z 0 -Z -1.57 -model ball3"
        output="screen" />

    <!-- Attempting to spawn the start gate -->
    <node
        name ="esp_board" pkg="gazebo_ros" type="spawn_model"
        args="-file $(find sub8_gazebo)/models/esp_board/esp_board.sdf -sdf
        -x 20 -y -20 -z -4.5 -Z 0 -model esp_board"
        output="screen" />

  <!-- Start the sub model with cameras if desired -->
  <node if="$(arg cameras)"
    name="spawn_sub" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/sub8/sub8.sdf -sdf
      -x 13.0 -y 24.0 -z -1.0 -model sub8"
    output="screen" />

  <node unless="$(arg cameras)"
    name="spawn_sub" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/sub8/sub8_no_cams.sdf -sdf
      -x 13.0 -y 24.0 -z -1.0 -model sub8"
    output="screen" />


  <!-- Buoys -->
  <node
    name="red" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/buoys/red.sdf -sdf
      -x 20.1 -y 20.0 -z -1.0 -X 0 -Y 0 -Z 0 -model red"
    output="screen" />

  <node
    name="green" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/buoys/green.sdf -sdf
      -x 20.0 -y 21.2 -z -1.0 -X 0 -Y 0 -Z 0 -model green"
    output="screen" />

  <node
    name="yellow" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/buoys/yellow.sdf -sdf
      -x 20.03 -y 18.8 -z -1.0 -X 0 -Y 0 -Z 0 -model yellow"
    output="screen" />

  <node
    name="orange_rectangle" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/markers/channel_marker.sdf -sdf
      -x 12.0 -y 24.0 -z -4.0 -X 0 -Y -0.5 -Z 0 -model channel_marker_1"
    output="screen" />

  <node
    name="pinger" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find sub8_gazebo)/models/pinger/pinger.sdf -sdf
      -x 0 -y 0 -z 0 -model pinger"
    output="screen" />

  <node pkg="sub8_gazebo" type="gazebo_controller.py" name="gazebo_interface" />
  <node pkg="sub8_gazebo" type="pinger_tf_pub.py" name="pinger_sim_tf_pub" />
  <!--node pkg="sub8_gazebo" type="actuator_sim.py" name="actuator_sim" /> -->
  <node pkg="sub8_gazebo" type="buoys.py" name="buoy_contact_reporter" />
  <node pkg="sub8_gazebo" type="turbulator.py" name="turbulator" output="screen" if="$(arg turbulence)" />

  <include file="$(find sub8_alarm)/launch/alarms.launch" />

  <include file="$(find sub8_launch)/launch/subsystems/rise.launch" />
  <group if="$(arg thrusters)">
    <include file="$(find sub8_thruster_mapper)/launch/thruster_mapper.launch" />
    <include file="$(find sub8_videoray_m5_thruster)/launch/thruster_driver.launch"/>
  </group>

  <include file="$(find sub8_launch)/launch/tf.launch" />
  <node pkg="nodelet" type="nodelet" args="standalone odometry_utils/odometry_to_tf" name="odometry_to_tf"/>
  <node pkg="nodelet" type="nodelet" name="transform_odometry" args="standalone odometry_utils/transform_odometry">
    <rosparam>
      frame_id: /map
      child_frame_id: /base_link
    </rosparam>
    <remap from="orig_odom" to="model_odom"/>
  </node>

  <group ns="/camera" if="$(arg cameras)">
    <group ns="front">
      <node pkg="image_proc" type="image_proc" name="front_left_image_proc" ns="left" />
      <node pkg="image_proc" type="image_proc" name="front_left_image_proc" ns="right" />
    </group>
    <group ns="down">
      <node pkg="image_proc" type="image_proc" name="down_left_image_proc" ns="left" />
    </group>
  </group>

  <!-- Load model into rviz -->
  <param name="robot_description" command="cat $(find sub8_missions)/tools/sub8/sub8.xml" />
</launch>
